{
  "Body": "Himanshu’s little brother loves to play the ancient game <i>Moksha Patam</i>. <i>Moksha Patam</i> originated in India in the 2<sup>nd</sup> century AD\nand is associated with traditional Hindu philosophy contrasting karma and kama, or destiny and desire. Today, however, the\ngame is most known as either <i>Snakes and Ladders</i>, or <i>Chutes and Ladders</i>. Aside from its ancient roots, the game is a great tool\nfor helping young children learn to count.\n\n<i>Moksha Patam</i> is a turned based game played on a square grid with varied dimensions, in which players roll a single 6-sided die\n(1-6) to determine the number of moves the player is to move forward. After the end of a turn, a player may potentially land on\neither a “S#” signifying a snake (or chute) or an “L#” signifying a ladder. If a player lands on the lower-numbered end of a\nladder, the player moves up to the ladder’s higher-number square. If the player lands on the higher-numbered square of a snake,\nthe player moves down to the snake’s lower-numbered square. The player or players who reach the last square, or surpass the\nlast square, is declared the winner. As this is a turned based game, all players are guaranteed to have the same number of turns,\ni.e. if Player 1 reaches or surpasses the last square, Player 2 is afforded one last move to try and reach or surpass the last square\nas well.\n\nThe below image shows an example <i>Moksha Patam</i> board with dimension 10 x 10:\n\n<img/>\n\nAll players start at the square with index 0. For formatting purposes for the 10 x 10 board, 0 is denoted as 00 so that each\ncolumn is straight. Assuming a player is currently at index 00 and roles a 6 from the die, the player would move to index 06, but\nthis index has L1 on it denoting this as a ladder. Therefore, the player is then moved to index 35 which is the higher-number\nsquared corresponding to L1. If the player were at index 91 and were to roll a 1, the player would move to index 92 and would\nremain here until the following turn, as this is the higher-numbered latter corresponding to L3. If the player was at index 54 and\nwere to roll a 2, the player would move to index 55. Index 55 however has S1 denoting this as a snake (chute). Therefore, the\nplayer is moved down to index 18 as this is the lower-number square corresponding to S1. If a player were at index 43 and\nwere to roll a 4, the player would move to index 47 and would remain here until the following turn, as this is the lowernumbered snake corresponding to S2. Although depicted in this board as being on separate rows, snakes and ladders do not\nnecessarily have to be on the different rows. This means that a player could move horizontally only, with no vertical movement\non the board.\n\nUnfortunately, with UIL Computer Science season ramping up, Himanshu doesn’t have as much time to play Moksha Patam\nwith his little brother due to CS practice. In an effort to not only appease his little brother’s thirst for Moksha Patam, but to get\nsome extra coding practice in as well, Himansu comes up with the idea to write a program that will play Moksha Patam against\nhis little brother. The game will only feature two players: Player 1 and Player 2. A series of moves for each player will be given\ncorresponding to the dice roll for that term. As soon as a winner is found and both players have had equal number of turns, the\nplay for the current game is terminated. Can you help Himanshu write such a program?",
  "Input": "Input starts with a line containing an integer N, the number of games to be played. N will be in range [1,20]. Each game\nstarts first with an integer D for the dimension of the board. D will be in range [2,32]. Odd dimensions \nfor the square board are allowed. This means that the last square to be reach or surpassed is not guaranteed to be at the top left.\nFor formatting purposes all indexes will be outputted to uniform column width, so that each column is straight up and down. The\nfollowing D lines contain the board for that given game play. Boards use a back-and-forth track from the bottom of the playing\narea (guaranteed to be the bottom left corner) to the last square. Indexes will be incremented by 1. The board will also have\nscattered snakes (chutes) and ladders placed throughout the board. Snakes will be represented by S## and ladders will be\nrepresented by L##. Where ## represents the number of the respective snake or ladder. ## will be formatted with padded zeros\nto make sure the formatting for each column remains straight. For every snake or ladder present, it will be guaranteed to have a\ncorresponding end point. It can also be guaranteed that a snake nor a ladder will be present at index 00 nor at the max index of\n\uD835\uDC37\n2 − 1. Following the board are two lines. The first starting with “P1:” and the second starting with “P2:”, each followed by\nthe respected moves for the player. Moves will be in range [1,6] and separated by a comma. The number of moves present may\ninclude extra moves that won’t be carried out, if a player or players, is found to have reached the max index or surpassed the\nmax index. Last, a line of 36 dashes “-“ is presented to separate the different game inputs.",
  "Output": "For each game played, you are to output either: Game #CURRENT_GAME_NUMBER: Player 1 wins!, Game\n#CURRENT_GAME_NUMBER: Player 2 wins!, Game #CURRENT_GAME_NUMBER: Both players win!, or\nGame #CURRENT_GAME_NUMBER: Neither Player 1 or Player 2 won. Remember, each of the two players\nare guaranteed to have the same number of moves, resulting in the potential for two winners."
}