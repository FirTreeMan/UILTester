{
  "Body": "Khan is the original person that the “House Robber” problem (also known as the “Knapsack” problem) was written about. What\noften doesn’t get talked about with the house robber problem is that after successfully optimizing which items Khan places in his\nknapsack, he now must escape the house he has just robbed. However, in his desire to have perfectly optimized the items in his\nbag, he has taken too long and has triggered the alarm of the house! However, thankfully for Khan’s sake, the homeowner is\nusing an experimental alarm which is comprised of a series of sensors that incrementally turn on. That is, at time <i>t</i> = 1, sensor 1\nturns on and can detect any moving entity within its detection radius. At time <i>t</i> = 2, sensor 2 can do the same, and so on. Khan\nhas managed to make his way to the final hallway; however, this is the most complex of them all so far. Help Khan determine\nhow much time he has left before he will be unable to navigate out of the final hallway and make it to the door without being\ndetected.\n<img/>",
  "Input": "The first line of input will consist of a single integer, <i>T</i> (1 ≤ <i>T</i> ≤ 10<sup>2</sup>), denoting the number of testcases to follow. Each\ntestcase will begin with two space-separated integers <i>n<sub>i</sub></i> (1 ≤ <i>n<sub>i</sub></i> ≤ 10<sup>4</sup>) and <i>w<sub>i</sub></i> (1 ≤ <i>w<sub>i</sub></i> ≤ 2<sup>16</sup), denoting the number of sensors\nand the width of the hall for the <i>i<sup>th</sup></i> testcase, respectively. The following <i>n<sub>i</sub></i> lines will each contain three space-separated floating\npoints <i>x<sub>j</sub></i>, <i>y<sub>j</sub></i>, <i>r<sub>j</sub></i>, the <i>j<sup>th</sup></i> of which denotes the (<i>x<sub>j</sub></i>, <i>y<sub>j</sub></i>) center and effective radius of the <i>j<sup>th</sup></i> sensor. You may assume that 0 ≤ <i>x<sub>j</sub></i> ≤\n<i>w<sub>i</sub></i>, 0 ≤ <i>y<sub>j</sub></i> ≤ 10 ⋅ <i>w<sub>i</sub></i>, and 0 < <i>r<sub>j</sub></i> ≤ <i>w<sub>i</sub></i> for all <i>j</i>.",
  "Output": "For each of Khan’s <i>T</i> escape situations, on its own line, print out a single integer <i>t<sub>i</sub></i>, denoting the maximum amount of\ntime that Khan has before he is unable to escape undetected. If Khan is free to leave undetected after all <i>n</i> sensors turn on,\ninstead print “Completely Undetected.”. You may assume that Khan may be represented as a point and, as a result, if\ntwo circles are tangential to one another, their single point of intersection blocks Khan. Moreover, assume the hall occupies the\nspace starting from <i>x</i> = 0 to <i>x</i> = <i>w<sub>i</sub></i>. If it is impossible for Khan to escape if the first sensor turns on, print 0 indicating that\nKhan should have left sooner. Lastly, for your answer to be considered correct, ensure that floating point comparisons are\naccurate within an absolute error/precision of ε = 10<sup>-6</sup>."
}