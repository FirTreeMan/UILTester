{
  "Body": "You and your friend Kamil have a new internship. Your boss is giving you “important work” to do, however you are starting to\nsuspect that it may be busy work to keep you guys occupied. Your latest task is to sort a list of words alphabetically, but\nalphabetically based on their reverse string. We will work our way through the string starting from the end and going to the\nbeginning. For example: abc would come after cba, because we are sorting by the last letter first, and a comes before c.\nBasically, you’re sorting the words, but rather than beginning by comparing the FIRST letters of the two words, you begin with\nthe LAST letters of the two words.",
  "Input": "The first line will contain a single integer n (0 < n < 20) that indicates the number of data sets that follow. Each data set\nwill consist of an unknown number of space separated words in random order, with each data set appearing entirely on one line.\nAll words will consist of only uppercase and lowercase letters. There will not be any duplicates within test cases.",
  "Output": "Output the list of words in order based on their reverse, but print out the originals. Let’s use the first Sample case as an\nexample. We are given the words: hello darkness my old friend, and we need to sort this list of words in order,\nbased on their reverse ordering. So, since old and friend end with d, and darkness (s), my (y), and hello (o) have last\nletters that come after d in the alphabet, old and friend will come before hello, my and darkness in our output. Now,\nold will come before friend, as they both end with d, but l (old’s second to last letter) comes before n (friend’s second\nto last letter), so old will be first followed by friend, then hello, because o comes before s and y in the alphabet, then\ndarkness, then my. So, our output will be: old friend hello darkness my"
}