{
  "Body": "Helena likes to play with different methods of coding and decoding secret messages to her friends. She has come up with a new\ntechnique but is having difficulty implementing it in code.\n\nShe wants to specify a “word” size and then swap the letters between adjoining words. Here is an example for encoding the\nmessage “UIL programmers crack the code!” with a selected word size of 4:\n\n<ul><li>First word is “UIL ” – the space is included in the swapping process</li>\n<li>Second word is “prog”</li>\n<li>Reverse the letters in each word to get: “ LIU” and “gorp”</li>\n<li>Swap the words to get: “gorp LIU”</li>\n<li>Continue the process with “ramm” and “ers ” to get “gorp LIU sremmar”</li>\n<li>Continue with “crac” and “k th” to get “gorp LIU sremmarht kcarc”</li>\n<li>That leaves “e code!” which is fewer characters than 8 or (4 * 2)</li>\n<li>Split remaining characters into 2 words with the first word larger by exactly 1 character when count is odd</li>\n<li>Those words would be “e co” and “de!” – special characters are included in swaps</li>\n<li>Reverse and swap final words to get encoded message: “gorp LIU sremmarht kcarc!edoc e”</li></ul>\n\nOf course, an encoding scheme is useful only if the encoded message can be decoded. Turns out that this scheme will decode its\nown encoded message! Can you help Helena by writing a program to decode her messages?",
  "Input": "First line contains a single integer <b>T</b> the number of test cases that follow with <b>T</b> ≤ 10. Each test case starts with a line\ncontaining 2 integers separated by a single space: first is S with range [2 ≤ S ≤ 10], the desired word size, and second is the\nnumber of lines N with range [2 ≤ N ≤ 10] that are encoded messages to be decoded using the specified word size. Each line of\ntext contains only printable characters including spaces and special characters with no leading or trailing spaces. The lines will\ncontain between 5 and 150 characters.",
  "Output": "For each test case, output each decoded message on a single line surrounded with single quotes then follow that test\ncase with a line containing 25 equal signs “=========================”"
}