{
  "Body": "A binary digit, also known as a bit, is the smallest unit of data that a computer can process. By definition, a bit can hold the\nvalue of 0 or 1 only. Bitmasking is the act of applying a mask over a value to keep, change, or modify a piece of given\ninformation. A mask determines which bits to take, which bits to clear, and which bits to invert in a binary number.\nIn general, there are three common bitwise operators that when applied to a given operand, with a programmer defined mask,\ncan be used to set certain bits to a 0, a 1, or to the inverse of the given bit. Those operators are the bitwise and (<b>&</b>), the bitwise or\n(<b>|</b>), and the bitwise exclusive or (<b>^</b>). The below table shows how each of the three operators work:\n\n<img/>\n\nAssume an n-bit word, with the rightmost bit in the internal representation (the least significant bit) is numbered 0, and the\nleftmost bit in the internal representation (the most significant bit) is numbered n-1, a programmer can set bits 0, 2, 4, and 5 of\nan arbitrary operand, opnd, to a 1, leaving all other bits unchanged with the bitmask expression: opnd <b>|</b> 35<sub><i>x</i></sub> where the\nsubscript x denotes a base 16 number. In this case the bitwise operator used is the bitwise or (<b>|</b>) and the mask chosen is 35<sub><i>x</i></sub>.\n\n<b>Explanation:</b> Suppose opnd is an 8 bit word and opnd = abcd efgh, where the letters a-h are either a 0\nor a 1. Then the hexadecimal 35 would be represented as 0011 0101\n\nSo,\n\n<img/>\n\nNotice, after the bitwise operator and mask are applied to the original opnd, bits 0, 2, 4, and 5 result in a 1, but all other bits are\nunchanged.\nSveta would like your help writing a program, that given instructions for which bits need to be set to a zero, to a one, or to the\ninverse of the original bit, outputs the expression needed to accomplish the given task. Are you up to the challenge?",
  "Input": "The first line will contain a single integer n that indicates the number of data sets that follow. n is guaranteed to be in\nrange of [1,20]. Each data set will consist of five lines. Line 1 indicates the number of bits in the operand opnd and will be\nguaranteed to be either 8, 16, or 32. Line 2 indicates the bits that are to be set to a 1, Line 3 indicates the bits that are to be set\nto a 0, Line 4 indicates the bits that are to be inverted, and Line 5 is 20 dashes whose purpose is to give a visual separation\nbetween the different data sets. Lines 2-4 will be comma separated lists. Lists will be in ascending order, and indexes will be in\nrange of [0,number of bits -1]. If no bits are provided, the string “n/a” will be present, indicating that no bits are to be set in that\ncategory or inverted.",
  "Output": "For each data set, you are to output: “opnd BIT_WISE_OPERATOR MASK” where BIT_WISE_OPERATOR is\neither <b>|</b>, <b>&</b>, or <b>^</b> and MASK is a hexadecimal number or you are to output: “This can not be done with a single\nbitwise operator.” Note, the MASK must use capital letters, and is guaranteed to be at least one digit, if not more. Any\nleading zeros, aside from the minimum numbered digit, are to be supressed. "
}