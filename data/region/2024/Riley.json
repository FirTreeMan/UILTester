{
  "Body": "Riley’s friend Priscella warned her about past programming challenges that required working with 2-D arrays in a non-standard\npattern instead of straight rows and columns. Priscella suggested Riley practice by walking around the outer edge of the array\nand working inward.\nThe following example is NOT meant to show any pattern in the way that random data will actually exist in the table, the data in\nthe table is specifically organized to only show the pattern of processing the cells in the table. Teams are NOT to infer any\nmeaning; it is just data in a table that will be processed in a unique pattern.\nStart at the top left corner and walk straight down the first column, visiting cells with 1 … 7. Movement then changes direction\nand walks across the bottom row, visiting cells with 8 … 13. Movement again changes direction and walks up the right column,\nvisiting cells with 14 … 19. Movement again changes direction and across the top row, visiting cells with 20 … 24. The top\ncell of that column was previously visited and is not included. That same pattern is repeated with the remaining portion of the\narray, visiting cells with 25 … 29, then 30 … 33, then 34 … 37, and 38 … 40. The process continues, spiraling inward, until all\ncells are visited: cells with 41 … 43, then 44 … 45, then 46 … 47, then 48, and finally 49.\n\n<img/>\n\nFor each path around the array as described above, calculate and output the average of the cell values visited during that trip\naround the array as shown below in the first line of sample output.",
  "Input": "First line contains a single integer <b>T</b> the number of test cases that follow with <b>T</b> ≤ 10. Each test case starts with a line\ncontaining 2 integers separated by whitespace: <b>R</b>, the number of rows, and <b>C</b>, the number of columns, with both 2 ≤ <b>R</b>, <b>C</b> ≤ 15.\nThat line will be followed by R lines of data with each containing C integers separated by whitespace containing integers in [-\n100, 100].",
  "Output": "For each test case, output 1 row of averages produced from the segments visited, separated by single space. A trailing\nspace at end of each line is permitted. Display the averages with 2 digits after the decimal point."
}