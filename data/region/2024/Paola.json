{
  "Body": "You have been hired by Professor Paola to handle a new method of storing data he calls “matrixizationing”. You will be given a\nmatrix of integers, and a number of commands to use to alter the matrix. The commands will all be one of the following:\n● \"ROTROW I N\" – Rotate row I of the matrix N spaces to the right. If N is a negative value, then row I should be\nrotated |N| spaces to the left (|N| is absolute value of N).\n● \"ROTCOL I N\" – Rotate column I of the matrix N spaces downward. If N is a negative value, then column I should\nbe rotated |N| spaces to the left (|N| is absolute value of N).\n● \"ADDROW I [A, B, …]\" – Add the given row [A, B, …] to the matrix at index I. If the size of the given row\nis not the same size as the other rows currently in the matrix, do not add it, and output the string \"ROW [A, B, …]\nOF INVALID LENGTH\". This output should be on its own line, before the output for the data set. If the index is out\nof bounds, and the given row is of incorrect length, print both error messages, with the index out of bounds message\ncoming first.\n● \"ADDCOL I [A, B, …]\" – Add the given column [A, B, …] to the matrix at index I. If the size of the given\ncolumn is not the same size as the other columns currently in the matrix, do not add it, and output the string \"COLUMN\n[A, B, …] OF INVALID LENGTH\". This output should be on its own line, before the output for the data set. If\nthe index is out of bounds, and the given column is of incorrect length, print both error messages, with the index out of\nbounds message coming first.\n● \"DELROW I\" – Delete the row of the matrix at index I.\n● \"DELCOL I\" – Delete the column of the matrix at index I.\n● \"GETCOL I\" – Print out the column at index I in the format [A, B, …]. This output should be on its own line,\nbefore the output for the data set.\n● \"GETROW I\" – Print out the row at index I in the format [A, B, …]. This output should be on its own line, before\nthe output for the data set.\n● \"SETVAL I J N\" – Set the value at row I column J equal to N.\n● If for any of the commands, one or more of the given indices is out of bounds, ignore the command and output the\nstring \"INDEX OUT OF BOUNDS.\". This includes adding a row or column at index = size, i.e., if the matrix is 3x3,\nadding a row or column at index 3 will be out of bounds.",
  "Input": "The input will begin with an integer, n (0 < n <= 1000), denoting the number of test cases to follow. Each test case\nwill begin with 3 integers, r, c, and m, denoting the number of rows and columns in the starting matrix, and the number of\ncommands to be done on said matrix, respectively. Each of the following r lines will each contain c integers, denoting a row of\nthe matrix. Following these r lines, there will be m lines, each containing a command in the format shown above in the problem\ndescription.",
  "Output": "Output, after any outputs from the commands as specified, the matrix of integers after all commands have been run,\nwith each row appearing on its own line with every element separated by spaces. Separating each test case, output the following\nstring \"----------\" containing 10 hyphens."
}