{
  "Body": "Svetlana’s favorite toy growing up was the 8 puzzle game. For those unfamiliar with the 8 puzzle game, the goal of the 8 puzzle\ngame is to get a random ordering of the numbers 1 thru 8, into acceding order, leaving a blank at the bottom, right most corner.\nThe only legal move is to slide a number into a blank. No two numbers, can be swapped. For example, take the below board.\nThis board would take 6 moves to optimally get all blocks in the correct ascending order 1 thru 8, with the blank at the bottom\nright most position.\n\n<img/>\n\nAlthough Svetlana, can solve this puzzle, she wants to know if she’s solving it in the best, optimal way. Can you help Svetlana\nwrite a program that given a starting board, will output the number of moves it would take to optimally solve the puzzle?",
  "Input": "Input will begin with an integer N, the number of test cases. N will be in range [1,10]. Each starting board is preceded\nby eight dashes. This serves to break up each test case, making it easier to read. Following the eight dashes, will be the 3 x 3\nboard, representing the starting position of the tiles. The value of -1 will be used to indicate the BLANK position in the board.\nIt is guaranteed that the numbers 1-8 will be given. There will be no duplicates, and no numbers outside of the range [1,8].",
  "Output": "For each test case, you are to output: “Number of steps needed to solve: #”, where # is the number of\nmoves to optimally solve the puzzle. If the puzzle has no solution, output: “No solution exists.”"
}