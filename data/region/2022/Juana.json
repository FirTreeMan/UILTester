{
  "Body": "Juana has been working with 2-dimension tables of data and would like to extract an arbitrary “chunk” of the data. She will\nprovide the number of rows and columns in the original table along with the data to populate the table. She will then provide a\nstarting point by identifying the row and column positions of the top left corner of the “chunk” along with the numbers of\ncolumns and rows desired. Juana does not have programming experience so her tables start with row 1 and column 1 at the topleft corner. She has provided the following example:\n\n<img/>\n\nThe table contains 4 rows and 5 columns with the data as shown above. Juana would like to extract the “chunk” of data that\nstarts at row 3 and column 2. She wants 3 columns across the rows and 2 total rows as shown by the shading above.\n\nCan you create a “chunk” extraction program for Juana?",
  "Input": "First line of data file contains a positive integer T, the number of test cases that follow with 1 ≤ T ≤ 10. Each test case\nstarts with a line containing the number of rows R and columns C for the table with 2 ≤ R,C ≤ 15. That line will then be\nfollowed by R lines of data each containing C integers in the range [0, 1000). The data items will be right-aligned with leading\nspaces for student viewing below. The next line will contain 4 integers separated by a space. The first pair of integers are the\nrow and column numbers of the top-left corner. The next 2 integers are the count of columns and rows desired in the “chunk”.\nAll 4 integers will have the same range as specified for R and C above. There is no guarantee that Juana specifies the starting\npoint and sizes for the “chunk” correctly. When there is not enough data to extract the complete “chunk” an error message will\nbe displayed instead of the requested “chunk”.",
  "Output": "For each test case, display a line with the test case number formatted as shown in the sample. If the “chunk” cannot be\nextracted, display the error message as shown below on the same line as the test case. Otherwise, the extracted “chunk” of data\nis displayed below the test case line. Each data item is right-aligned in a column that is 5 positions wide. Follow the “chunk”\nwith a line containing 20 hyphens “--------------------”."
}