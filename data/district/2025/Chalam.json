{
  "Body": "Your friend Chalam has taken a recent fascination in the fundamental theorem of arithmetic which states that every positive\ninteger can be represented uniquely as a product of prime numbers. Chalam’s fascination has been in finding that unique prime\nrepresentation for different numbers. However, he has recently come to a standstill as the numbers he wishes to break down are\nbecoming increasingly larger and larger, making the amount of time that it takes to identify the unique classification unbearably\nlong. Knowing a thing or two about how to automate this process, you decide to write Chalam a program which, given a\npositive integer, determines the unique prime product representation of that number.",
  "Input": "The first line of input will consist of a single integer, <i>n</i> (1 ≤ <i>n</i> ≤ 2.5 ⋅ 10<sup>4</sup>), denoting the number of integers that need to\nbe processed. The next � lines will each consist of a single integer\n\n\t<i>q<sub>i</sub></i>, (for all <i>i</i>, 1 ≤ <i>i</i> ≤ <i>n</i>: 2 ≤ <i>q<sub>i</sub></i> ≤ 2<sup>31</sup> − 1),\nthe <i>i</i><sup>th</sup> of which represents Chalam’s <i>i</i><sup>th</sup> query.",
  "Output": "For each of Chalam’s <i>n</i> queries, each on their own line, output a space-separated list of the prime numbers, which,\nwhen multiplied with one another, equal Chalam’s query. In cases where a given prime number is listed more than once,\ncondense the expression into the form of <i>p<sub>j</sub><sup>e<sub>j</sub></sup></i> (p_j^e_j) where <i>p<sub>j</sub></i> represents the <i>j</i><sup>th</sup> prime number and <i>e<sub>j</sub></i> represents the\nnumber of times that <i>p<sub>j</sub></i> occurs in the product. Lastly, these terms should be listed in ascending order according to the value of\nthe base of the exponent (i.e., terms should be listed such that <i>p<sub>1</sub></i> < <i>p<sub>2</sub></i> < ⋯ < <i>p<sub>j</sub></i>)."
}