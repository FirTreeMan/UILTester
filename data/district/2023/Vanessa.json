{
  "Body": "Vanessa and her fellow UIL Computer Science teammates, are looking to raise funds to buy new laptops for the upcoming\nregional and state competitions. Fortunately, a very gracious donor in the community has agreed to make a sizable donation to\ntheir cause, but there’s a catch… The donor wants Vanessa and her team to earn every dollar received. In order to receive the\nfunding, the donor has devised a game that must be played.\n\nThe game the donor has come up with is as follows: The donor provides the team with a set of unique numbers as well as a\ndesired sum to be reached. It is up to the team to determine every possible way to use the unique numbers, that when added up,\nequal the desired sum. For every valid combination, the donor will donate one dollar to the cause. For example, suppose the\ndonor gave the team the numbers 1, 2, and 3 as well as a desired sum of 4. There are four unique ways this sum can be achieved\ngiven the unique number set:\n\n<img/>\n\nIn this instance, the team would receive four dollars from the donor and is allowed to play the game again with a different set of\nnumbers and desired sum. Vanessa and her team don’t have to list out all the combinations, but instead just have to give the\nnumber of possible combinations. If at any point Vanessa and her team are unable to determine the correct number of\ncombinations, the game is over and the donor will cease to distribute any more funds to the team. With so much on the line,\nVanessa knows it’s in her team’s best interest to write a program that will guarantee their submission for the number of\ncombinations to the donor is correct every time, in order to maximize the funds to be received. Can you help Vanessa and her\nteam write such a program?",
  "Input": "Input will consist of an integer N, the number of test cases. N will be in range [1,30]. Each test case is made up of three\nlines. Line one is the unique list of integers in range [1,100]. It will be guaranteed that the list will contain at least 1 integer and\nno more than 10 integers. The list is separated by commas with no spaces in between. The second line of the test case is the\ndesired sum that is to be reached. The desired sum is guaranteed to be in range [0,2000]. The third line of each test case is 20\ndashes meant purely to break up each test.",
  "Output": "For each test case, you are to output the exact number of unique combinations that add up to the desired sum. The\nnumber of possible combinations will be guaranteed to be in range [0,2147483647]."
}