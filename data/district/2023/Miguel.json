{
  "Body": "Miguel has dreams of creating a very cool and very challenging game involving letters and a puzzle situation. He wants to\nencrypt a phrase and then have the user try to determine what the original was. Below is an example:\n\tThe question might be:\tWhat did the Oz girl say to her canine?\n\tThe clue would be:\tAaaa, E'ee e eefgiii kl'mn nnn no Ooorrs stttvwy.\n\tThe answer is:&#9;Toto, I've a feeling we're not in Kansas anymore.\n\nTo start this game, Miguel needs a program that will take a quote, or any list of characters, and encrypt it using the following\nrules:\n\n<ul><li>If a character is any non-alphabetic character, it will remain in the same position.\n</li><li>All of the letters will be sorted in alphabetical order not considering the case of the letter.\n</li><li>Then, the sorted letters will be placed back in the list of characters in positions where letters originally were. If a\nposition originally held an uppercase letter, the new letter in that position will now be uppercase. If a position originally\nheld a lowercase letter, it will again be lowercase.</li></ul>\n\nLook carefully at the example above as you plan your approach.\n\nMiguel is counting on you to write this program so he can start making his millions of dollars as soon as possible.",
  "Input": "Input will consist of an integer N, the number of test cases. The number of test cases will be in range [1,20]. Each\nsubsequent line will consist of a list of characters that includes both letters and non-letters. Any printed keyboard character could\nbe used. The length of the string of characters is in the range [1,80]",
  "Output": "Each line of output will consist of a list of characters. All non-letters will be in their original positions. Every position\nthat was an uppercase letter will still hold an uppercase letter, and every position that was a lowercase letter will still hold a\nlowercase letter. Now, however, the original letters have been sorted."
}