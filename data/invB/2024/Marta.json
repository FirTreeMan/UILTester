{
  "Body": "Marta has been studying hard for the upcoming UIL season but is having some difficulty with the classic bubble sort for arrays.\nShe understands that every pass through the array will move smaller items one direction and larger items the other direction. An\nascending sort will move smaller items towards the lower or [0] array position while larger items move towards the higher-end\nof the array. A descending sort would move items the opposite directions.\n\nShe would like to be able to confirm her manual sort progress after a specific number of passes to view how the arrangement\nshould be changing. Here is an example:\n\n<img/>\n\nHowever, the sort may not get to the requested pass count, depending on how quickly the numbers settle into their correct\npositions. In that case, the numbers will be fully sorted but Marta wants to know how many passes it actually took to complete\nthe sort when that happens.\n\nCan you help Marta modify her sort to output a list of numbers a specific pass of the sort?",
  "Input": "First line will contain an integer T with 1 ≤ T ≤ 10, the number of test cases. Each test case will consist of two lines of\nspace-separated integer data. First line will contain an integer N with 10 ≤ N ≤ 50, the number of integers to be sorted, followed\nby another integer P with 1 ≤ P < N, the sort pass after which the array content will be displayed. The next line will contain N\nintegers in range [10, 99], the data to be sorted into ascending order but displayed after only P or fewer passes have been\ncompleted.",
  "Output": "Each test case will produce 1 line of output that starts with “Test case #1 pass #2: ” where #1 is the test\ncase number and #2 is the actual number of passes completed which can be less than P because of the early exit technique from\na proper bubble sort."
}