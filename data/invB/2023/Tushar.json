{
  "Body": "Tushar really enjoys working with 2-D arrays and is always looking for new ways to work with the array data. Traditional uses\ntypically involve horizontal and vertical processing but Tushar is trying a diagonal pattern and is having some difficulty.\nStarting at the top left corner, which is indexed as row 0 and column 0, work down and right to compute the average of the\nelements along a diagonal. Then, work across the top to generate an average for each down and right diagonal. Continue by\nworking down the left side and generate an average, again moving down and right along each diagonal.\n\n<img/>\n\nIn the above example with 5 rows and 6 columns, the first shaded diagonal contains 1…5, the second diagonal 6…10, the third\nshaded diagonal 11…14, the fourth diagonal 15…17, the fifth shaded diagonal 18…19, and finishing across the top with just 20.\nWorking down the left side would be 21…24, then shaded 25…27, then 28…29, and finally just the shaded 30. This produces\n10 diagonals with averages shown in sample output below.",
  "Input": "First line contains a single integer <b>N</b> the number of test cases that follow with <b>N</b> ≤ 10. Each test case starts with a line\ncontaining 2 integers separated by whitespace: <b>R</b>, the number of rows, and <b>C</b>, the number of columns, with both 2 ≤ <b>R</b>, <b>C</b> ≤ 12.\nThat line will be followed by <b>R</b> lines of data with each containing <b>C</b> integers separated by whitespace containing integers in [-\n100,100].",
  "Output": "For each test case, output 1 row of averages, separated by single spaces. Display the averages with 2 digits after the\ndecimal point."
}