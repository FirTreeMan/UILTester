{
  "Body": "Your friend Mohit is creating a new tech start up, and he needs you to write a program to filter out all the resumes he needs for\nopen jobs, and provide him the top 3 candidates for each given job.\n\nYou will be given a large pool of applicants, and then a number of jobs with listed qualifications, for each of which you will\ndetermine the top 3 applicants from the pool.",
  "Input": "The first line will contain two space separated integers, m and n, denoting the number of applicants in the applicant\npool, and the number of jobs to be checked. The following m lines will contain the name of the applicant, the education level of\nthe applicant, the experience of the applicant, the skills of the applicant, and any awards/certifications the applicant has received,\nin that order, all in the form of strings, in the format shown below (colons between names of fields and values, semicolons\nbetween each field, and commas between different attributes within a field, look to the example and structure listed below:\n\n<img/>\n\nThe following n lines will each contain the job title, followed by all qualifications required for the job, in the format shown\nbelow:\n\n<img/>\n\nNotes:\n<ul><li>There can be up to 5 required skills or required awards for a single job listing.</li>\n<li>The format shown in the structure sections above will be followed for all student and judge data, so code accordingly.</li>\n<li>An applicant can have an unlimited number of skills or awards, but only one listed education.</li>\n<li>Any of the fields other than name and job title can be None, which means that particular field has no attributes, so\nAwards: None would mean that that particular applicant has no awards. A job can also have None listed for any of\nthe qualifications, this indicates that the job has no preference when it comes to skills, or education, or awards. If a job\nhas None listed for any of the job qualifications, that job element does not disqualify anyone, all applicants would\nqualify regardless of their related data. So, if a job had None for education requirement, everyone qualifies unless\ndisqualified for another reason.</li></ul>",
  "Output": "For each job, output the title of the job, followed by a list of at most 3 applicants who are qualified for the job, sorted\nby the criteria listed in the Sorting Criterion section below. In order for an applicant to qualify for a job, the applicant must meet\nall the listed requirements for the job except for the None elements. For education: There are 3 levels of degree, Master’s,\nBachelor’s, and PhD, PhD > Master’s > Bachelor’s, meaning, anyone with a PhD in CS is qualified for a job requiring a\nMaster’s or Bachelor’s in CS, and anyone with a Master’s is qualified for a job requiring a Bachelor’s in the same field. Any\ndegree in the incorrect field is invalid unless the job requirement is None. If the applicant meets the education requirement, we\ncheck the skills requirements, meaning that for each skill listed, the applicant must have at least that many years of experience\nwith that skill. If the applicant is qualified for all skills, then we check for awards, meaning that the applicant must have every\nrequired award for the job. If all of these are true, then the applicant is qualified. Now that we have all of the qualified\napplicants, we sort them by the following criteria to find the top (at most) 3 for each job posting.\n\n<img/>\n\nAfter sorting, we print the name of the job, on its own line, followed by (at most) the top 3 applicant’s names, with the numbers\nshown, followed by an empty line following the format of the sample output. If there are no applicants that meet the\nrequirements, output the name of the job, as in all the other cases, followed by a line stating \"No Applicants meet\nRequirements.\""
}