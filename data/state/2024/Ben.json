{
  "Body": "Ben was recently creating his account for a new game that he wanted to play with his friends and went to enter in his username.\nAfter successfully creating his account and joining his friends’ lobby, one of his friends noticed that he spelled his username\nincorrectly! Ben had accidentally spelled “pigeon” as “pidgeon” as he thought that “pidgeon” sounded more phonetically correct\nthan “pigeon.”\nBeing the good friends that they are, Ben’s friends decided to poke a little fun at him by changing their usernames to other\nmisspellings of pigeon. More specifically, they wanted to create usernames which contain multiple noncontiguous substrings of\nthe string “pidgeon”. Help Ben determine just how good of friends he has by calculating the number of unique noncontiguous\nsubstrings there exist of the string “pigeon” in the various different usernames his friends came up with. Given that these\nnumbers may become decently large, determine this number modulo 10<sup>9</sup> + 7.",
  "Input": "The first line of input will consist of a single integer <i>n</i> (1 ≤ <i>n</i> ≤ 50) denoting the number of testcases to follow. The\nnext <i>n</i> testcases will consist of a single line which consists of the username (<i>u</i>) for the current testcase. It is guaranteed that u\nconsists of only the letters ‘p’, ‘i’, ‘d’, ‘g’, ‘e’, ‘o’, and ‘n’, although, not necessarily in that order. Additionally, it should be\nnoted that the length of the string will fall in the range 1 ≤ |<i>u</i>| ≤ 10<sup>3</sup>.",
  "Output": "For each of Ben’s <i>n</i> usernames, print out the number of non-contiguous substrings of the username that are equivalent\nto the string “pidgeon” modulo 10<sup>9</sup> + 7."
}